{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/BD,GAAY,EACZ,IAAME,EAAgBC,KAAKC,SAAW,GAetC,OAbgB,IAAIC,SAAQ,SAACC,EAASC,GAChCL,EAEFM,YAAW,WACTF,EAAQ,CAAEN,WAAUC,S,GACnBA,GAGHO,YAAW,WACTD,EAAO,CAAEP,WAAUC,S,GAClBA,E,IAhBIQ,SAASC,cAAc,SAsB/BC,iBAAiB,UAAU,SAAAC,GAC9BA,EAAEC,iBASF,IAPA,IAAMC,EAAaF,EAAEG,OACfC,EAAoBF,EAAW,GAC/BG,EAAsBH,EAAW,GAGjCI,EAFcJ,EAAW,GAEJK,MAElBC,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAK/BrB,EAAcqB,EAJOC,OAAOL,EAAkBG,OAEjBC,EADNC,OAAOJ,EAAoBE,QAI/CG,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAGjD2B,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA3B,GAAS4B,OAAOI,QACd,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  position += 1;\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      // Fulfill\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    } else {\n      // Reject\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    }\n  });\n  return promise;\n}\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const formInputs = e.target;\n  const initialDelayInput = formInputs[0];\n  const delayIncrementInput = formInputs[1];\n  const amountInput = formInputs[2];\n\n  const amount = amountInput.value;\n\n  for (let i = 0; i < amount; i++) {\n    const initialDelay = Number(initialDelayInput.value);\n    const delayIncrement = Number(delayIncrementInput.value);\n    const delay = initialDelay + i * delayIncrement;\n\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","formInputs","target","initialDelayInput","delayIncrementInput","amount","value","i","Number","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.cb37c7f9.js.map"}